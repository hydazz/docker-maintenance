name: Docker Update CI
on:
  schedule:
    - cron:  '0 0 * * 2'
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Varibles
      run: |
        echo "hydazz" >/tmp/GH_USER
        echo "docker-maintenance" >/tmp/GH_REPO
        echo "vcxpz/maintenance" >/tmp/DOCKERHUB_IMAGE
        echo "$(curl --silent "https://api.github.com/repos/$(cat /tmp/GH_USER)/$(cat /tmp/GH_REPO)/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')" >/tmp/version
    - name: Docker Login
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u vcxpz --password-stdin
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --build-arg VERSION="$(cat /tmp/version)" --build-arg BUILD_DATE="$(date +%Y-%m-%d)" --tag $(cat /tmp/DOCKERHUB_IMAGE):latest
    - name: Update Packages Versions
      env:
        GIT_KEY: ${{ secrets.GIT_KEY }}
      run: |
        docker run --rm --entrypoint '/bin/sh' -v /tmp:/tmp $(cat /tmp/DOCKERHUB_IMAGE):latest -c '\
                  apk info -v > /tmp/package_versions.txt && \
                  sort -o /tmp/package_versions.txt  /tmp/package_versions.txt && \
                  chmod 777 /tmp/package_versions.txt'
        curl -sSL https://raw.githubusercontent.com/$(cat /tmp/GH_USER)/$(cat /tmp/GH_REPO)/master/push_updates.sh | bash
        if [ "$(cat /tmp/do_update)" = "true" ]; then \
          git push https://$(cat /tmp/GH_USER):$GIT_KEY@github.com/$(cat /tmp/GH_USER)/$(cat /tmp/GH_REPO).git --all
        fi
        exit 0
    - name: Docker Push
      run: |
        docker push $(cat /tmp/DOCKERHUB_IMAGE):latest
